#include "Chip8.h"
#include <fstream>


Chip8::Chip8(const char* ROM_DIR) {
	LoadROM(ROM_DIR);
	LoadFont();
	
	PC = ROM_ENTRY;
}

void Chip8::LoadROM(const char* ROM_DIR) {
	std::fstream ROM;
	ROM.open(ROM_DIR, std::ios::binary);
	for(uint16_t i = 0x200; ROM.get((char&)memory[i]); i++);
}

void Chip8::LoadFont() {
	uint8_t fontData[] = {
		//0 - 0x01
		0x00, 0xF0, 0x90, 0x90, 0x90, 0xF0,
		//1 - 0x07
		0x01, 0x20, 0x60, 0x20, 0x20, 0x70,
		//2 - 0x0D
		0x02, 0xF0, 0x10, 0xF0, 0x80, 0xF0,
		//3 - 0x13
		0x03, 0xF0, 0x10, 0xF0, 0x10, 0xF0,
		//4 - 0x19
		0x04, 0x90, 0x90, 0xF0, 0x10, 0x10,
		//5 - 0x1F
		0x05, 0xF0, 0x80, 0xF0, 0x10, 0xF0,
		//6 - 0x25
		0x06, 0xF0, 0x80, 0xF0, 0x90, 0xF0,
		//7 - 0x2B
		0x07, 0xF0, 0x10, 0x20, 0x40, 0x40,
		//8 - 0x31
		0x08, 0xF0, 0x90, 0xF0, 0x90, 0xF0,
		//9 - 0x37
		0x09, 0xF0, 0x90, 0xF0, 0x10, 0xF0,
		//A - 0x3D
		0x0A, 0xF0, 0x90, 0xF0, 0x90, 0x90,
		//B - 0x43
		0x0B, 0xE0, 0x90, 0xE0, 0x90, 0xE0,
		//C - 0x49
		0x0C, 0xF0, 0x80, 0x80, 0x80, 0xF0,
		//D - 0x4F
		0x0D, 0xE0, 0x90, 0x90, 0x90, 0xE0,
		//E - 0x55
		0x0E, 0xF0, 0x80, 0xF0, 0x80, 0xF0,
		//F - 0x5B
		0x0F, 0xF0, 0x80, 0xF0, 0x80, 0x80,
		//0 - 0x61
		0x00, 0x3C, 0x46, 0xCF, 0xCB, 0xDB, 0xDB, 0xD3, 0xF3, 0x62, 0x3C,
		//1 - 0x6C
		0x01, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF,
		//2 - 0x77
		0x02, 0x7C, 0xC6, 0xE3, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xFF,
		//3 - 0x82
		0x03, 0x7E, 0xC3, 0xE3, 0x03, 0x03, 0x1E, 0x03, 0xC3, 0xC3, 0x7E,
		//4 - 0x8D
		0x04, 0x1E, 0x36, 0x66, 0xC6, 0x86, 0xFF, 0x06, 0x06, 0x06, 0x06,
		//5 - 0x98
		0x05, 0xFF, 0xC0, 0xC0, 0xC0, 0xFC, 0x06, 0x03, 0xE3, 0xC7, 0x7E,
		//6 - 0xA3
		0x06, 0x3E, 0x63, 0xC7, 0xC0, 0xC0, 0xFC, 0xC6, 0xC3, 0x63, 0x3E,
		//7 - 0xAE
		0x07, 0xFF, 0xC3, 0xE3, 0x03, 0x06, 0x0C, 0x18, 0x18, 0x18, 0x18,
		//8 - 0xB9
		0x08, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0xC3, 0xC3, 0xC3, 0x7E,
		//9 - 0xC4
		0x09, 0x3C, 0x66, 0xC3, 0xC3, 0x63, 0x3F, 0x03, 0x73, 0x66, 0x3C,
		//A - 0xCF
		0x0A, 0x18, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xFF, 0xC3, 0xC3, 0xC3,
		//B - 0xDA
		0x0B, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xFC, 0xC3, 0xC3, 0xC3, 0xFE,
		//C - 0xE5
		0x0C, 0x3E, 0x63, 0xC7, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x63, 0x3E,
		//D - 0xF0
		0x0D, 0xFC, 0xC6, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC6, 0xFC,
		//E - 0xFB
		0x0E, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0xC0, 0xC0, 0xC0, 0xFF,
		//F - 0x106
		0x0F, 0xFF, 0xFF, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0
	};
	
	for(uint16_t i = 0; i < sizeof(fontData); i++) {
		memory[FONT_LOCATION + i] = fontData[i];
	}
}

void Chip8::NextCycle() {
	
}